@page "/Tests/TestCase"
@using TestsCaseApp.Blazor.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Localization
@using TestsCaseApp.Blazor.Models
@inject ApplicationDbContext Context
@inject NavigationManager NavigationManager
@inject IStringLocalizer<TestCase> Localizer

<div class="text-center display-4">@Model.Name</div>
<div class="row g-5 justify-content-center">
    
    <div class="col-12 col-md-8 col-xl-7">
        <div class="mb-2">
            <label class="form-label">@Localizer["Name"]</label>
            <input 
                class="form-control"
                @attributes="@(new KeyValuePair<string, object>[] { new ("disabled", Model.Result is not null)})"
                @bind="Model.Name">
        </div>
        <div class="mb-2">
            <label class="form-label">@Localizer["Precondition"]</label>
            <textarea 
                class="form-control" rows="4" 
                @attributes="@(new KeyValuePair<string, object>[] { new ("disabled", Model.Result is not null)})"
                @bind="Model.Precondition"></textarea>
        </div>
        <div class="mb-2">
            <label class="form-label">@Localizer["Required result"]</label>
            <textarea 
                rows="4" class="form-control"
                @attributes="@(new KeyValuePair<string, object>[] { new ("disabled", Model.Result is not null)})"
                @bind="Model.RequiredResult"></textarea>
        </div>
        <div class="mb-2">
            <button 
                class="btn btn-success form-control" 
                @attributes="@(new KeyValuePair<string, object>[] { new ("disabled", Model.Result is not null)})"
                @onclick="Save">@Localizer["Save"]</button>
        </div>
    </div>

    <div class="col-12 col-md-8 col-xl-7 text-center">
        <div class="display-6">@Localizer["Steps"]:</div>
    </div>
    
    @if (Model.Steps is null)
    {
        <Loading></Loading>

    }
    else if (Model.Steps.Count() == 0)
    {
        <div class="text-center display-6">@Localizer["Empty"]</div>
    }
    else
    {
        @foreach (var step in Model.Steps)
        {
            <div class="col-12 col-md-8 col-xl-7">
                <Step 
                    Model="step" 
                    TestCaseId="Model.Id" 
                    OnDelete="Ondelete"
                    IsDisabled="@(Model.Result is not null)"/>
            </div>
        }

    }
    <div class="col-12 col-md-8 col-xl-7"
         @attributes="@(new KeyValuePair<string, object>[] { new ("hidden", Model.Result is not null)})">
         
        <button class="btn btn-primary form-control" @onclick="AddStep">@Localizer["Add step"]</button>
    </div>
    <div class="col-12 col-md-8 col-xl-7"
         @attributes="@(new KeyValuePair<string, object>[] { new ("hidden", Model.Result is not null)})">
        <button class="btn btn-primary form-control" data-bs-toggle="collapse" href="#collapseResult">@Localizer["Add result"]</button>
    </div>
    <div class="col-12 col-md-8 col-xl-7" >
        <div class="collapse bg-body-secondary rounded p-3" id="collapseResult">
            <div class="mb-2 form-check">
                <label for="resultCheck" class="form-check-label">@Localizer["Complete with success"]</label>
                <input class="form-check-input" @bind="_result.Success" id="resultCheck" type="checkbox">
            </div>
            <div class="mb-2">
                <label class="form-label">@Localizer["Result"]</label>
                <textarea 
                    class="form-control" 
                    rows="4"
                    @bind="_result.Comment"></textarea>
            </div>
            <button class="btn btn-success form-control" @onclick="AddResult">@Localizer["Save"]</button>
        </div>
    </div>

</div>



@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "id")]
    public string Id { get; set; }

    private TestCaseResult _result = new();
    private TestsCaseApp.Blazor.Models.TestCase? Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id is null)
            NavigationManager.NavigateTo("/Tests/Index", true);

        Model = await Context.TestCases
            .Include(test => test.Steps)
            .Include(test => test.Result)
            .FirstOrDefaultAsync(test => test.Id == Id);
        if (Model is null)
            NavigationManager.NavigateTo("/Tests/Index", true);

        _result.TestCase = Model;
        
        base.OnInitialized();
    }

    private async Task Save()
    {
        Context.Update(Model);
        await Context.SaveChangesAsync();
    }

    private async Task AddStep()
    {
        var newStep = new TestCaseStep { TestCase = Model, Number = Model.Steps.Count() + 1, Description = Localizer["New step"] };
        await Context.AddAsync(newStep);
        //Model.Steps.Add(newStep);
        await Context.SaveChangesAsync();
        StateHasChanged();
    }

    private async Task Ondelete()
    {
        StateHasChanged();
    }

    private async Task AddResult()
    {
        await Context.AddAsync(_result);
        Model.Result = _result;
        await Context.SaveChangesAsync();
        StateHasChanged();
    }
}
                @*<div class="card">
                    <div class="card-body">
                        <input class="form-control" @bind="step.Description">
                    </div>
                </div>*@
@*<div class="modal fade" id="createModal">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
    <div class="modal-content">
        <div class="modal-body">
            <CreateStep TestCaseId="@Id"></CreateStep>
        </div>
    </div>
    </div>
</div>*@
        @* <button class="btn btn-primary form-control" data-bs-target="#createModal" data-bs-toggle="modal">@Localizer["Add step"]</button> *@
